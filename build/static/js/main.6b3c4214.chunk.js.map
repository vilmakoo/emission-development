{"version":3,"sources":["services/communicationWithServer.js","state/searchReducer.js","components/SearchBar.js","components/Charts.js","components/Result.js","components/Notification.js","state/databaseReducer.js","components/App.js","state/store.js","index.js"],"names":["communicationWithServer","searchCountrysEmissions","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","country","perCapita","compare","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","t0","stop","this","_x","_x2","_x3","apply","arguments","updateDatabase","_ref2","_callee2","_context2","searchTopEmitters","_ref3","_callee3","_context3","initialState","searchTerm","searchPopulations","topEmitters","undefined","setError","error","type","searchReducer","state","length","action","objectSpread","highIncomeAverages","SearchBar","_this","react_default","createElement","Form","onSubmit","event","preventDefault","props","Label","className","Control","value","onChange","changeSearchTerm","target","placeholder","Check","label","togglePopulationCheckBox","toggleCompareCheckBox","Button","variant","onClick","Component","mapDispatchToProps","dispatch","searchService","name","setTimeout","ConnectedSearchBar","connect","search","Charts","options","title","yaxis","theme","palette","text","align","margin","style","fontSize","color","tooltip","fixed","enabled","position","offsetY","offsetX","x","formatter","seriesName","legend","horizontalAlign","countMax","averages","add","maxOfAverages","reduce","b","Math","max","maxOfData","emissionsOptions","min","map","emissionsAverage","d","emissions","axisTicks","show","axisBorder","labels","populationsOptions","population","populationAverage","perCapitaOptions","perCapitaAverage","seriesEmissions","filter","year","y","seriesPopulations","seriesPerCapita","id","react_apexcharts_min_default","series","width","ConnectedCharts","Result","result","components_Charts","ListGroup_default","c","Item","key","ConnectedResult","Notification","alertText","databaseError","searchError","updatingDatabase","Dialog_default","open","DialogContent_default","classes","root","DialogContentText_default","React","ConnectedNotification","database","setUpdatingState","updatingState","databaseReducer","App","handleUpdateDatabaseButtonClick","components_Notification","components_SearchBar","components_Result","serverService","ConnectedApp","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.6b3c4214.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst searchCountrysEmissions = async (country, perCapita, compare) => {\n  try {\n    const response = await axios.get(`/api/emissions/${country}?percapita=${perCapita}&compare=${compare}`);\n    return response.data;\n  } catch (error) {\n    return 'error';\n  }\n};\n\nconst updateDatabase = async () => {\n  try {\n    const response = await axios.get('/api/update_database');\n    return response.data;\n  } catch (error) {\n    return 'error';\n  }\n};\n\nconst searchTopEmitters = async () => {\n  try {\n    const response = await axios.get('/api/emissions/top_emitters');\n    return response.data;\n  } catch (error) {\n    return 'error';\n  }\n};\n\nexport default { searchCountrysEmissions, updateDatabase, searchTopEmitters };","import searchService from '../services/communicationWithServer';\n\nconst initialState = { searchTerm: '', searchPopulations: false, compare: false, topEmitters: undefined };\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'CHANGE_SEARCH_TERM':\n    return {\n      ...state,\n      searchTerm: action.searchTerm\n    };\n\n  case 'TOGGLE_POPULATION_CHECK_BOX':\n    return {\n      ...state,\n      searchPopulations: !state.searchPopulations\n    };\n\n  case 'TOGGLE_COMPARE_CHECK_BOX':\n    return {\n      ...state,\n      compare: !state.compare\n    };\n\n  case 'SET_RESULT':\n    return {\n      searchTerm: state.searchTerm,\n      searchPopulations: state.searchPopulations,\n      compare: state.compare,\n      country: action.country,\n      data: action.data,\n      highIncomeAverages: action.highIncomeAverages\n    };\n\n  case 'SET_ERROR':\n    return {\n      ...state,\n      error: action.error\n    };\n\n  case 'SET_TOP_EMITTERS':\n    return {\n      searchTerm: state.searchTerm,\n      searchPopulations: state.searchPopulations,\n      compare: state.compare,\n      topEmitters: action.data\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const changeSearchTerm = (searchTerm) => {\n  return {\n    type: 'CHANGE_SEARCH_TERM',\n    searchTerm: searchTerm\n  };\n};\n\nexport const togglePopulationCheckBox = () => {\n  return {\n    type: 'TOGGLE_POPULATION_CHECK_BOX'\n  };\n};\n\nexport const toggleCompareCheckBox = () => {\n  return {\n    type: 'TOGGLE_COMPARE_CHECK_BOX'\n  };\n};\n\nexport const setError = (error) => {\n  return {\n    type: 'SET_ERROR',\n    error\n  };\n};\n\nexport const searchCountrysEmissions = (country, searchPopulations, compare) => {\n  return async (dispatch) => {\n    const data = await searchService.searchCountrysEmissions(country, searchPopulations, compare);\n\n    if (data === 'error') {\n      dispatch(setError('Couldn\\'t connect to the server'));\n    } else if (data.country.name === 'NOT FOUND') {\n      dispatch(setError('Country not found'));\n    } else {\n      dispatch({\n        type: 'SET_RESULT',\n        country: data.country.name,\n        data: data.country.data,\n        highIncomeAverages: data.highIncomeAverages\n      });\n    }\n\n    setTimeout(() => {\n      dispatch(\n        setError(null)\n      );\n    }, 4000);\n  };\n};\n\nexport const searchTopEmitters = () => {\n  return async (dispatch) => {\n    const data = await searchService.searchTopEmitters();\n\n    if (data === 'error') {\n      dispatch(setError('Couldn\\'t connect to the server'));\n    } else {\n      dispatch({\n        type: 'SET_TOP_EMITTERS',\n        data\n      });\n    }\n\n    setTimeout(() => {\n      dispatch(\n        setError(null)\n      );\n    }, 4000);\n  };\n};\n\n\nexport default searchReducer;","import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { changeSearchTerm, searchCountrysEmissions, togglePopulationCheckBox, toggleCompareCheckBox, searchTopEmitters } from '../state/searchReducer';\n\nclass SearchBar extends Component {\n  render() {\n    const handleSearchTermChange = (event) => {\n      this.props.changeSearchTerm(event.target.value);\n    };\n\n    const handleIncludePopulationsClick = (event) => {\n      this.props.togglePopulationCheckBox();\n    };\n\n    const handleCompareClick = (event) => {\n      this.props.toggleCompareCheckBox();\n    };\n\n    const search = (event) => {\n      event.preventDefault();\n      this.props.searchCountrysEmissions(this.props.searchTerm, this.props.searchPopulations, this.props.compare);\n    };\n\n    const searchTopEmitters = (event) => {\n      this.props.searchTopEmitters();\n    };\n\n    return (\n      <div>\n        <Form onSubmit={search}>\n          <Form.Label className={'search-title'}>Search</Form.Label>\n          <p>Search for a country to see how its CO² emissions have developed during the years</p>\n          {/* TODO: search with what? laita siis ohjeistus */}\n          <Form.Control className={'search-input'} type='input' value={this.props.searchTerm} onChange={handleSearchTermChange} placeholder='Search' />\n          <Form.Check className={'search-checkbox'} label={'Include populations'} onChange={handleIncludePopulationsClick} />\n          <Form.Check className={'search-checkbox'} label={'Compare to the averages of countries with high income'} onChange={handleCompareClick} />\n          <Button className={'search-button'} type='submit'>Search</Button>\n        </Form>\n        <Button variant='info' onClick={searchTopEmitters}>Search for countries with largest emissions in 2014</Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchTerm: state.search.searchTerm,\n    searchPopulations: state.search.searchPopulations,\n    compare: state.search.compare\n  };\n};\n\nconst mapDispatchToProps = {\n  changeSearchTerm,\n  searchCountrysEmissions,\n  togglePopulationCheckBox,\n  toggleCompareCheckBox,\n  searchTopEmitters\n};\n\nconst ConnectedSearchBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n\nexport default ConnectedSearchBar;","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport { connect } from 'react-redux';\n\nclass Charts extends Component {\n  render() {\n    const options = (title, yaxis) => {\n      return {\n        theme: {\n          palette: 'palette6'\n        },\n        title: {\n          text: title,\n          align: 'center',\n          margin: 20,\n          style: {\n            fontSize:  '20px',\n            color:  '#EA3546'\n          },\n        },\n        yaxis: yaxis,\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          },\n          x: { formatter: (seriesName) => 'Year: ' + seriesName }\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'right',\n          offsetX: 40\n        }\n      };\n    };\n\n    const countMax = (averages, data, add) => {\n      const maxOfAverages = averages.reduce((a, b) => Math.max(a, b), 0);\n      const maxOfData = data.reduce((a, b) => Math.max(a, b), 0);\n      return Math.max(maxOfAverages, maxOfData) + add;\n    };\n\n    const emissionsOptions = options('Development of CO²-emissions', [{\n      min: 0,\n      max: this.props.data ? countMax(\n        this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.map(a => a.emissionsAverage) : [],\n        this.props.data.map(d => d.emissions),\n        5000\n      ) : 1000,\n      seriesName: 'CO²-emissions',\n      axisTicks: {\n        show: true,\n      },\n      axisBorder: {\n        show: true,\n        color: '#662E9B',\n      },\n      labels: {\n        style: {\n          color: '#662E9B',\n        }\n      },\n      title: {\n        text: 'CO²-emissions (kt)',\n        style: {\n          color: '#662E9B',\n        }\n      },\n      tooltip: {\n        enabled: true\n      }\n    }]\n    );\n\n    const populationsOptions = options('Development of Populations', [{\n      min: 0,\n      max: (this.props.data && this.props.data.map(d => d.population)) ? countMax(\n        this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.map(a => a.populationAverage) : [],\n        this.props.data.map(d => d.population),\n        1000000\n      ) : 1000,\n      seriesName: 'Population',\n      axisTicks: {\n        show: true,\n      },\n      axisBorder: {\n        show: true,\n        color: '#662E9B'\n      },\n      labels: {\n        style: {\n          color: '#662E9B',\n        }\n      },\n      title: {\n        text: 'Population',\n        style: {\n          color: '#662E9B',\n        }\n      },\n      tooltip: {\n        enabled: true\n      }\n    }]\n    );\n\n    const perCapitaOptions = options('Development of CO²-emissions per Capita', [\n      {\n        seriesName: 'CO²-emissions Per Capita',\n        min: 0,\n        max: (this.props.data && this.props.data.map(d => d.perCapita)) ? countMax(\n          this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.map(a => a.perCapitaAverage * 1000000) : [],\n          this.props.data.map(d => d.perCapita * 1000000),\n          1000\n        ) : 1000,\n        axisTicks: {\n          show: true,\n        },\n        axisBorder: {\n          show: true,\n          color: '#662E9B',\n        },\n        labels: {\n          style: {\n            color: '#662E9B',\n          }\n        },\n        title: {\n          text: 'CO²-emissions Per Capita (kg)',\n          style: {\n            color: '#662E9B',\n          }\n        },\n        tooltip: {\n          enabled: true\n        }\n      }]\n    );\n\n    const seriesEmissions = [{\n      name: this.props.country ? `${this.props.country}` : 'Searched country',\n      type: 'line',\n      data: (this.props.data && this.props.data.map(d => d.emissions)) ? this.props.data.filter(d => d.emissions !== null).map((d) => {\n        return {\n          x: d.year,\n          y: d.emissions\n        };\n      }) : []\n    },\n    {\n      name: 'Average of countries with high income',\n      type: 'line',\n      data: this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.filter(a => a.year && a.emissionsAverage !== 0).map(a => {\n        return {\n          x: a.year,\n          y: a.emissionsAverage\n        };\n      }) : []\n    }];\n\n    const seriesPopulations = [{\n      name: this.props.country ? `${this.props.country}` : 'Searched country',\n      type: 'line',\n      data: (this.props.data && this.props.data.map(d => d.population))\n        ? this.props.data.filter(d => d.population !== null).map((d) => {\n          return {\n            x: d.year,\n            y: d.population\n          };\n        }) : []\n    },\n    {\n      name: 'Average of countries with high income',\n      type: 'line',\n      data: this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.filter(a => a.year && a.populationAverage !== 0).map(a => {\n        return {\n          x: a.year,\n          y: a.populationAverage\n        };\n      }) : []\n    }];\n\n    const seriesPerCapita = [{\n      name: this.props.country ? `${this.props.country}` : 'Searched country',\n      type: 'line',\n      data: (this.props.data && this.props.data.map(d => d.perCapita))\n        ? this.props.data.filter(d => d.perCapita !== null).map((d) => {\n          return {\n            x: d.year,\n            y: d.perCapita * 1000000\n          };\n        })\n        : []\n    },\n    {\n      name: 'Average of countries with high income',\n      type: 'line',\n      data: this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.filter(a => a.year && a.perCapitaAverage && a.perCapitaAverage !== 0).map(a => {\n        return {\n          x: a.year,\n          y: a.perCapitaAverage * 1000000\n        };\n      }) : []\n    }];\n\n    return (\n      <div>\n        <div className=\"App\">\n          <div id=\"country\"><b>Country: {this.props.country}</b></div>\n\n          <div id=\"emissions-chart\" className='chart'>\n            <Chart options={emissionsOptions} series={seriesEmissions} type=\"line\" width=\"1000\" />\n          </div>\n          <div id=\"populations-chart\">\n            <Chart options={populationsOptions} series={seriesPopulations} type=\"line\" width=\"1000\" />\n          </div>\n          <div id=\"emissions-per-capita\">\n            <Chart options={perCapitaOptions} series={seriesPerCapita} type=\"line\" width=\"1000\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    country: state.search.country,\n    data: state.search.data,\n    highIncomeAverages: state.search.highIncomeAverages\n  };\n};\n\nconst ConnectedCharts = connect(mapStateToProps)(Charts);\n\nexport default ConnectedCharts;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Charts from './Charts';\n\nclass Result extends Component {\n  render() {\n    let result;\n    if (this.props.data) {\n      result = (<Charts />);\n    } else if (this.props.topEmitters) {\n      result = (<ListGroup>\n        {this.props.topEmitters.map(c => (<ListGroup.Item key={c}>{c}</ListGroup.Item>))}\n      </ListGroup>);\n    }\n\n    return (\n      <div>\n        <div>\n          <h2>Results</h2>\n\n          {result}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.search.data,\n    topEmitters: state.search.topEmitters\n  };\n};\n\nconst ConnectedResult = connect(mapStateToProps)(Result);\n\nexport default ConnectedResult;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\n\nclass Notification extends React.Component {\n  render() {\n    let alertText;\n    if (this.props.databaseError) {\n      alertText = this.props.databaseError;\n    } else if (this.props.searchError) {\n      alertText = this.props.searchError;\n    } else if (this.props.updatingDatabase === 'in progress') {\n      alertText = 'Updating database...';\n    } else if (this.props.updatingDatabase === 'done') {\n      alertText = 'Database is now up to date!';\n    } else {\n      alertText = undefined;\n    }\n\n    let className;\n    if (this.props.databaseError || this.props.searchError) {\n      className = 'notification-error';\n    } else {\n      className = 'notification-info';\n    }\n\n    return (\n      <div>\n        <Dialog\n          open={alertText !== undefined}\n        >\n          <DialogContent classes={{ root: className }}>\n            <DialogContentText classes={{ root: 'notification-text' }}>\n              {alertText}\n            </DialogContentText>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    updatingDatabase: state.database.updatingDatabase,\n    databaseError: state.database.error,\n    searchError: state.search.error\n  };\n};\n\nconst ConnectedNotification = connect(mapStateToProps)(Notification);\n\nexport default ConnectedNotification;","import serverService from '../services/communicationWithServer';\n\nconst initialState = { updatingDatabase: null, error: null };\n\nconst databaseReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n  case 'SET_ERROR':\n    return {\n      ...state,\n      error: action.error\n    };\n\n  case 'SET_UPDATING_STATE':\n    return {\n      ...state,\n      updatingDatabase: action.updatingState\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const setUpdatingState = (state) => {\n  return {\n    type: 'SET_UPDATING_STATE',\n    updatingState: state\n  };\n};\n\nexport const setError = (error) => {\n  return {\n    type: 'SET_ERROR',\n    error\n  };\n};\n\nexport const updateDatabase = () => {\n  return async (dispatch) => {\n    dispatch(setUpdatingState('in progress'));\n\n    const result = await serverService.updateDatabase();\n\n    result === 'database updated' ? dispatch(setUpdatingState('done')) : dispatch(setError('Couldn\\'t connect to the server'));\n\n    setTimeout(() => {\n      dispatch(setUpdatingState(null));\n      dispatch(setError(null));\n    }, 4000);\n  };\n};\n\nexport default databaseReducer;","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport SearchBar from './SearchBar';\nimport Result from './Result';\nimport Notification from './Notification';\nimport { updateDatabase } from '../state/databaseReducer';\n\nclass App extends Component {\n  render() {\n    const handleUpdateDatabaseButtonClick = async (event) => {\n      this.props.updateDatabase();\n    };\n\n    return (\n      <div className='container'>\n        <Notification />\n        <h1>CO²-emissions</h1>\n        <SearchBar />\n        <Button variant=\"warning\" onClick={handleUpdateDatabaseButtonClick}>Update database</Button>\n        <Result />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    updatingDatabase: state.database.updatingDatabase\n  };\n};\n\nconst mapDispatchToProps = {\n  updateDatabase,\n};\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default ConnectedApp;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport searchReducer from './searchReducer';\nimport databaseReducer from './databaseReducer';\n\nconst reducer = combineReducers({\n  search: searchReducer,\n  database: databaseReducer\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './state/store';\nimport './styles/index.scss';\nimport 'typeface-roboto';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root'));\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}
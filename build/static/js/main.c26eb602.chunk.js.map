{"version":3,"sources":["services/search.js","state/searchReducer.js","components/SearchBar.js","components/Result.js","components/App.js","state/store.js","index.js"],"names":["services_search","countrysEmissions","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","country","perCapita","compare","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","this","_x","_x2","_x3","apply","arguments","initialState","searchTerm","searchPopulations","searchReducer","state","length","undefined","action","type","objectSpread","highIncomeAverages","SearchBar","_this","react_default","createElement","Form","onSubmit","event","preventDefault","props","searchCountrysEmissions","Label","className","Control","value","onChange","changeSearchTerm","target","placeholder","Check","label","togglePopulationCheckBox","toggleCompareCheckBox","Button","Component","mapDispatchToProps","dispatch","searchService","name","ConnectedSearchBar","connect","search","Result","options","title","yaxis","theme","palette","text","align","margin","style","fontSize","color","tooltip","fixed","enabled","position","offsetY","offsetX","x","formatter","seriesName","legend","horizontalAlign","countMax","averages","add","maxOfAverages","reduce","b","Math","max","maxOfData","emissionsOptions","min","map","emissionsAverage","d","emissions","axisTicks","show","axisBorder","labels","populationsOptions","population","populationAverage","perCapitaOptions","perCapitaAverage","seriesEmissions","filter","year","y","seriesPopulations","seriesPerCapita","id","react_apexcharts_min_default","series","width","ConnectedResult","App","components_SearchBar","components_Result","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.c26eb602.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst countrysEmissions = async (country, perCapita, compare) => {\n  const response = await axios.get(`/api/emissions/${country}?percapita=${perCapita}&compare=${compare}`);\n  return response.data;\n};\n\nexport default { countrysEmissions };","import searchService from '../services/search';\n\nconst initialState = { searchTerm: '', searchPopulations: false, compare: false };\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'CHANGE_SEARCH_TERM':\n    return {\n      ...state,\n      searchTerm: action.searchTerm\n    };\n\n  case 'TOGGLE_POPULATION_CHECK_BOX':\n    return {\n      ...state,\n      searchPopulations: !state.searchPopulations\n    };\n\n  case 'TOGGLE_COMPARE_CHECK_BOX':\n    return {\n      ...state,\n      compare: !state.compare\n    };\n\n  case 'SET_RESULT':\n    return {\n      ...state,\n      country: action.country,\n      data: action.data,\n      highIncomeAverages: action.highIncomeAverages\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const changeSearchTerm = (searchTerm) => {\n  return {\n    type: 'CHANGE_SEARCH_TERM',\n    searchTerm: searchTerm\n  };\n};\n\nexport const togglePopulationCheckBox = () => {\n  return {\n    type: 'TOGGLE_POPULATION_CHECK_BOX'\n  };\n};\n\nexport const toggleCompareCheckBox = () => {\n  return {\n    type: 'TOGGLE_COMPARE_CHECK_BOX'\n  };\n};\n\nexport const searchCountrysEmissions = (country, searchPopulations, compare) => {\n  return async (dispatch) => {\n    const data = await searchService.countrysEmissions(country, searchPopulations, compare);\n\n    dispatch({\n      type: 'SET_RESULT',\n      country: data.country.name,\n      data: data.country.data,\n      highIncomeAverages: data.highIncomeAverages\n    });\n  };\n};\n\n\nexport default searchReducer;","import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { changeSearchTerm, searchCountrysEmissions, togglePopulationCheckBox, toggleCompareCheckBox } from '../state/searchReducer';\n\nclass SearchBar extends Component {\n  render() {\n    const handleSearchTermChange = (event) => {\n      this.props.changeSearchTerm(event.target.value);\n    };\n\n    const handleIncludePopulationsClick = (event) => {\n      this.props.togglePopulationCheckBox();\n    };\n\n    const handleCompareClick = (event) => {\n      this.props.toggleCompareCheckBox();\n    };\n\n    const search = (event) => {\n      event.preventDefault();\n      this.props.searchCountrysEmissions(this.props.searchTerm, this.props.searchPopulations, this.props.compare);\n    };\n\n    return (\n      <Form onSubmit={search}>\n        <Form.Label className={'search-title'}>Search</Form.Label>\n        <p>Search for a country to see how its CO² emissions have developed during the years</p>\n        {/* TODO: search with what? laita siis ohjeistus */}\n        <Form.Control className={'search-input'} type='input' value={this.props.searchTerm} onChange={handleSearchTermChange} placeholder='Search' />\n        <Form.Check className={'search-checkbox'} label={'Include populations'} onChange={handleIncludePopulationsClick} />\n        <Form.Check className={'search-checkbox'} label={'Compare to the averages of countries with high income'} onChange={handleCompareClick} />\n        <Button className={'search-button'} type='submit'>Search</Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchTerm: state.search.searchTerm,\n    searchPopulations: state.search.searchPopulations,\n    compare: state.search.compare\n  };\n};\n\nconst mapDispatchToProps = {\n  changeSearchTerm,\n  searchCountrysEmissions,\n  togglePopulationCheckBox,\n  toggleCompareCheckBox\n};\n\nconst ConnectedSearchBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n\nexport default ConnectedSearchBar;","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport { connect } from 'react-redux';\n\nclass Result extends Component {\n  render() {\n    const options = (title, yaxis) => {\n      return {\n        theme: {\n          palette: 'palette6'\n        },\n        title: {\n          text: title,\n          align: 'center',\n          margin: 20,\n          style: {\n            fontSize:  '20px',\n            color:  '#EA3546'\n          },\n        },\n        yaxis: yaxis,\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          },\n          x: { formatter: (seriesName) => 'Year: ' + seriesName }\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'right',\n          offsetX: 40\n        }\n      };\n    };\n\n    const countMax = (averages, data, add) => {\n      const maxOfAverages = averages.reduce((a, b) => Math.max(a, b), 0);\n      const maxOfData = data.reduce((a, b) => Math.max(a, b), 0);\n      return Math.max(maxOfAverages, maxOfData) + add;\n    };\n\n    const emissionsOptions = options('Development of CO²-Emissions', [{\n      min: 0,\n      max: this.props.data ? countMax(\n        this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.map(a => a.emissionsAverage) : [],\n        this.props.data.map(d => d.emissions),\n        5000\n      ) : 1000,\n      seriesName: 'CO²-Emissions',\n      axisTicks: {\n        show: true,\n      },\n      axisBorder: {\n        show: true,\n        color: '#662E9B',\n      },\n      labels: {\n        style: {\n          color: '#662E9B',\n        }\n      },\n      title: {\n        text: 'CO²-emissions (kt)',\n        style: {\n          color: '#662E9B',\n        }\n      },\n      tooltip: {\n        enabled: true\n      }\n    }]\n    );\n\n    const populationsOptions = options('Development of Populations', [{\n      min: 0,\n      max: (this.props.data && this.props.data.map(d => d.population)) ? countMax(\n        this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.map(a => a.populationAverage) : [],\n        this.props.data.map(d => d.population),\n        1000000\n      ) : 1000,\n      seriesName: 'Population',\n      axisTicks: {\n        show: true,\n      },\n      axisBorder: {\n        show: true,\n        color: '#662E9B'\n      },\n      labels: {\n        style: {\n          color: '#662E9B',\n        }\n      },\n      title: {\n        text: 'Population',\n        style: {\n          color: '#662E9B',\n        }\n      },\n      tooltip: {\n        enabled: true\n      }\n    }]\n    );\n\n    const perCapitaOptions = options('Development of CO²-Emissions per Capita', [\n      {\n        seriesName: 'CO²-Emissions Per Capita',\n        min: 0,\n        max: (this.props.data && this.props.data.map(d => d.perCapita)) ? countMax(\n          this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.map(a => a.perCapitaAverage * 1000000) : [],\n          this.props.data.map(d => d.perCapita * 1000000),\n          1000\n        ) : 1000,\n        axisTicks: {\n          show: true,\n        },\n        axisBorder: {\n          show: true,\n          color: '#662E9B',\n        },\n        labels: {\n          style: {\n            color: '#662E9B',\n          }\n        },\n        title: {\n          text: 'CO²-emissions Per Capita (kg)',\n          style: {\n            color: '#662E9B',\n          }\n        },\n        tooltip: {\n          enabled: true\n        }\n      }]\n    );\n\n    const seriesEmissions = [{\n      name: this.props.country ? `${this.props.country}` : 'Searched country',\n      type: 'line',\n      data: (this.props.data && this.props.data.map(d => d.emissions)) ? this.props.data.filter(d => d.emissions !== null).map((d) => {\n        return {\n          x: d.year,\n          y: d.emissions\n        };\n      }) : []\n    },\n    {\n      name: 'Average of countries with high income',\n      type: 'line',\n      data: this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.filter(a => a.year && a.emissionsAverage !== 0).map(a => {\n        return {\n          x: a.year,\n          y: a.emissionsAverage\n        };\n      }) : []\n    }];\n\n    const seriesPopulations = [{\n      name: this.props.country ? `${this.props.country}` : 'Searched country',\n      type: 'line',\n      data: (this.props.data && this.props.data.map(d => d.population))\n        ? this.props.data.filter(d => d.population !== null).map((d) => {\n          return {\n            x: d.year,\n            y: d.population\n          };\n        }) : []\n    },\n    {\n      name: 'Average of countries with high income',\n      type: 'line',\n      data: this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.filter(a => a.year && a.populationAverage !== 0).map(a => {\n        return {\n          x: a.year,\n          y: a.populationAverage\n        };\n      }) : []\n    }];\n\n    const seriesPerCapita = [{\n      name: this.props.country ? `${this.props.country}` : 'Searched country',\n      type: 'line',\n      data: (this.props.data && this.props.data.map(d => d.perCapita))\n        ? this.props.data.filter(d => d.perCapita !== null).map((d) => {\n          return {\n            x: d.year,\n            y: d.perCapita * 1000000\n          };\n        })\n        : []\n    },\n    {\n      name: 'Average of countries with high income',\n      type: 'line',\n      data: this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.filter(a => a.year && a.perCapitaAverage && a.perCapitaAverage !== 0).map(a => {\n        return {\n          x: a.year,\n          y: a.perCapitaAverage * 1000000\n        };\n      }) : []\n    }];\n\n    return (\n      <div>\n        <div className=\"App\">\n          <h2>Results</h2>\n\n          {/* TODO: näytä joku varoitushässäkkä jos country on NOT FOUND */}\n          <div id=\"country\"><b>Country: {this.props.country}</b></div>\n\n          <div id=\"emissions-chart\" className='chart'>\n            <Chart options={emissionsOptions} series={seriesEmissions} type=\"line\" width=\"1000\" />\n          </div>\n          <div id=\"populations-chart\">\n            <Chart options={populationsOptions} series={seriesPopulations} type=\"line\" width=\"1000\" />\n          </div>\n          <div id=\"emissions-per-capita\">\n            <Chart options={perCapitaOptions} series={seriesPerCapita} type=\"line\" width=\"1000\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    country: state.search.country,\n    data: state.search.data,\n    highIncomeAverages: state.search.highIncomeAverages\n  };\n};\n\nconst ConnectedResult = connect(mapStateToProps)(Result);\n\nexport default ConnectedResult;","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport Result from './Result';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='container'>\n        <h1>CO²-emissions</h1>\n        <SearchBar />\n        <Result />\n      </div>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport searchReducer from './searchReducer';\n\nconst reducer = combineReducers({\n  search: searchReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './state/store';\nimport './styles/index.scss';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root'));\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}
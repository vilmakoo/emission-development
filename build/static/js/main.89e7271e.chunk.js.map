{"version":3,"sources":["services/search.js","state/searchReducer.js","components/SearchBar.js","components/Result.js","components/App.js","state/store.js","index.js"],"names":["services_search","countrysEmissions","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","country","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","emissions","stop","this","_x","apply","arguments","initialState","searchTerm","searchReducer","state","length","undefined","action","type","objectSpread","SearchBar","_this","react_default","createElement","Form","onSubmit","event","preventDefault","props","searchCountrysEmissions","Label","Control","value","onChange","changeSearchTerm","target","placeholder","Button","Component","mapDispatchToProps","dispatch","searchService","ConnectedSearchBar","connect","search","Result","color","points","filter","e","year","map","x","y","className","bundle_default","width","height","margins","top","right","bottom","left","hideXLabel","hideYLabel","onPointHover","obj","ConnectedResult","App","components_SearchBar","components_Result","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.89e7271e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst countrysEmissions = async (country) => {\n  const response = await axios.get(`/api/emissions/${country}`);\n  return response.data.emissions; // muuta tää json fiksummaksi bäkkärin puolella\n};\n\nexport default { countrysEmissions };","import searchService from '../services/search';\n\nconst initialState = { searchTerm: '' };\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'CHANGE_SEARCH_TERM':\n    return {\n      searchTerm: action.searchTerm\n    };\n\n  case 'SEARCH':\n    return {\n      ...state,\n      emissions: action.data };\n\n  default:\n    return state;\n  }\n};\n\nexport const changeSearchTerm = (searchTerm) => {\n  return {\n    type: 'CHANGE_SEARCH_TERM',\n    searchTerm: searchTerm\n  };\n};\n\nexport const searchCountrysEmissions = (country) => {\n  return async (dispatch) => {\n    const emissions = await searchService.countrysEmissions(country);\n\n    dispatch({\n      type: 'SEARCH',\n      data: emissions,\n    });\n  };\n};\n\n\nexport default searchReducer;","import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { changeSearchTerm, searchCountrysEmissions } from '../state/searchReducer';\n\nclass SearchBar extends Component {\n  render() {\n    const handleSearchTermChange = (event) => {\n      this.props.changeSearchTerm(event.target.value);\n    };\n\n    const search = (event) => {\n      event.preventDefault();\n      this.props.searchCountrysEmissions(this.props.searchTerm);\n    };\n\n    return (\n      <Form onSubmit={search}>\n        <Form.Label>Search</Form.Label>\n        <Form.Control type='input' value={this.props.searchTerm} onChange={handleSearchTermChange} placeholder='Search' />\n        <Button type='submit'>Search</Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchTerm: state.search.searchTerm,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeSearchTerm,\n  searchCountrysEmissions\n};\n\nconst ConnectedSearchBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n\nexport default ConnectedSearchBar;","import React, { Component } from 'react';\nimport LineChart from 'react-linechart';\nimport { connect } from 'react-redux';\nimport '../../node_modules/react-linechart/dist/styles.css';\n\nclass Result extends Component {\n  render() {\n    const data = [\n      {\n        color: 'steelblue',\n        points: this.props.emissions ? this.props.emissions.filter(e => e.year !== null && e.emissions !== null).map((e) => {\n          return {\n            x: e.year,\n            y: e.emissions\n          };\n        }) : []\n      }\n    ];\n\n    if (data[0].points.length === 0) {\n      return null;\n    }\n\n    const hovered = (obj) =>  `Year: ${obj.x}<br /> CO2 emissions: ${obj.y}`;\n\n    return (\n      <div>\n        <div className=\"App\">\n          <h2>Result</h2>\n          <p>The x-axis indicates the <b>Year</b> and the y-axis indicates the <b>CO2 emissions (kt)</b>.</p>\n\n\n          <LineChart\n            width={1000}\n            height={600}\n            margins={{ top: 20, right: 20, bottom: 20, left: 50 }}\n            data={data}\n            hideXLabel={true}\n            hideYLabel={true}\n            onPointHover={hovered}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    emissions: state.search.emissions,\n  };\n};\n\nconst ConnectedResult = connect(mapStateToProps)(Result);\n\nexport default ConnectedResult;","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport Result from './Result';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='container'>\n        <h1>CO²-emissions</h1>\n        <SearchBar />\n        <Result />\n      </div>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport searchReducer from './searchReducer';\n\nconst reducer = combineReducers({\n  search: searchReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './state/store';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root'));\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}
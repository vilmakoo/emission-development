{"version":3,"sources":["services/search.js","state/searchReducer.js","components/SearchBar.js","components/Result.js","components/App.js","state/store.js","index.js"],"names":["services_search","countrysEmissions","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","country","perCapita","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","stop","this","_x","_x2","apply","arguments","initialState","searchTerm","searchReducer","state","length","undefined","action","type","objectSpread","emissions","populations","SearchBar","_this","react_default","createElement","Form","onSubmit","event","preventDefault","props","searchCountrysEmissions","Label","className","Control","value","onChange","changeSearchTerm","target","placeholder","Button","Component","mapDispatchToProps","dispatch","searchService","ConnectedSearchBar","connect","search","Result","console","log","options","dataLabels","enabled","stroke","width","theme","palette","yaxis","min","max","map","e","reduce","b","Math","axisTicks","show","axisBorder","color","labels","style","title","text","tooltip","p","seriesName","opposite","fixed","position","offsetY","offsetX","x","formatter","legend","horizontalAlign","series","name","filter","year","y","id","react_apexcharts_min_default","height","ConnectedResult","App","components_SearchBar","components_Result","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.28fa656f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst countrysEmissions = async (country, perCapita) => {\n  const response = await axios.get(`/api/emissions?country=${country}&percapita=${perCapita}`);\n  return response.data;\n};\n\nexport default { countrysEmissions };","import searchService from '../services/search';\n\nconst initialState = { searchTerm: '' };\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'CHANGE_SEARCH_TERM':\n    return {\n      searchTerm: action.searchTerm\n    };\n\n  case 'SET_RESULT':\n    return {\n      ...state,\n      country: action.country,\n      emissions: action.emissions,\n      populations: action.populations\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const changeSearchTerm = (searchTerm) => {\n  return {\n    type: 'CHANGE_SEARCH_TERM',\n    searchTerm: searchTerm\n  };\n};\n\nexport const searchCountrysEmissions = (country) => {\n  return async (dispatch) => {\n    const data = await searchService.countrysEmissions(country, true);\n\n    dispatch({\n      type: 'SET_RESULT',\n      country: data.country,\n      emissions: data.emissions,\n      populations: data.populations\n    });\n  };\n};\n\n\nexport default searchReducer;","import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { changeSearchTerm, searchCountrysEmissions } from '../state/searchReducer';\n\nclass SearchBar extends Component {\n  render() {\n    const handleSearchTermChange = (event) => {\n      this.props.changeSearchTerm(event.target.value);\n    };\n\n    const search = (event) => {\n      event.preventDefault();\n      this.props.searchCountrysEmissions(this.props.searchTerm);\n    };\n\n    return (\n      <Form onSubmit={search}>\n        <Form.Label className={'search-title'}>Search</Form.Label>\n        {/* TODO: search with what? laita siis ohjeistus */}\n        {/* TODO: mahdollisuus hakea myös väkimäärää */}\n        <Form.Control className={'search-input'} type='input' value={this.props.searchTerm} onChange={handleSearchTermChange} placeholder='Search' />\n        <Button className={'search-button'} type='submit'>Search</Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchTerm: state.search.searchTerm,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeSearchTerm,\n  searchCountrysEmissions\n};\n\nconst ConnectedSearchBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n\nexport default ConnectedSearchBar;","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport { connect } from 'react-redux';\n\nclass Result extends Component {\n  render() {\n    console.log(this.props.emissions);\n    const options = {\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: [1, 1, 4]\n      },\n      theme: {\n        palette: 'palette5'\n      },\n      yaxis: [\n        {\n          min: 0,\n          max: (this.props.emissions && this.props.emissions.length > 0) ? this.props.emissions.map(e => e.value).reduce((a, b) => Math.max(a,b)) + 50000 : 1000,\n          axisTicks: {\n            show: true,\n          },\n          axisBorder: {\n            show: true,\n            color: '#2B908F',\n          },\n          labels: {\n            style: {\n              color: '#2B908F',\n            }\n          },\n          title: {\n            text: 'CO²-emissions',\n            style: {\n              color: '#2B908F',\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        },\n        {\n          min: 0,\n          max: (this.props.populations && this.props.populations.length > 0) ? this.props.populations.map(p => p.value).reduce((a, b) => Math.max(a,b)) + 1000000 : 1000,\n          seriesName: 'Emissions',\n          opposite: true,\n          axisTicks: {\n            show: true,\n          },\n          axisBorder: {\n            show: true,\n            color: '#F9A3A4'\n          },\n          labels: {\n            style: {\n              color: '#F9A3A4',\n            }\n          },\n          title: {\n            text: 'Population',\n            style: {\n              color: '#F9A3A4',\n            }\n          },\n        },\n      ],\n      tooltip: {\n        fixed: {\n          enabled: true,\n          position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n          offsetY: 30,\n          offsetX: 60\n        },\n        x: { formatter: (seriesName) => 'Year: ' + seriesName }\n      },\n      legend: {\n        horizontalAlign: 'left',\n        offsetX: 40\n      }\n    };\n\n    const series = [{\n      name: 'Emissions',\n      type: 'line',\n      data: this.props.emissions ? this.props.emissions.filter(e => e.year !== null && e.value !== null).map((e) => {\n        return {\n          x: e.year,\n          y: e.value\n        };\n      }) : []\n    }, {\n      name: 'Population',\n      type: 'line',\n      data: this.props.populations ? this.props.populations.filter(p => p.year !== null && p.value !== null).map((p) => {\n        return {\n          x: p.year,\n          y: p.value\n        };\n      }) : []\n    }];\n\n    return (\n      <div>\n        <div className=\"App\">\n          <h2>Result</h2>\n\n          {/* näytä alla olevat vain jos on jotain näytettävää eli showResult = true */}\n          {/* näytä joku varoitushässäkkä jos country on NOT FOUND */}\n          <div id=\"country\"><b>Country: {this.props.country}</b></div>\n\n          <div id=\"chart\">\n            <Chart options={options} series={series} type=\"line\" height=\"800px\" width=\"1000px\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    emissions: state.search.emissions,\n    country: state.search.country,\n    populations: state.search.populations\n  };\n};\n\nconst ConnectedResult = connect(mapStateToProps)(Result);\n\nexport default ConnectedResult;","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport Result from './Result';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='container'>\n        <h1>CO²-emissions</h1>\n        <SearchBar />\n        <Result />\n      </div>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport searchReducer from './searchReducer';\n\nconst reducer = combineReducers({\n  search: searchReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './state/store';\nimport './styles/index.scss';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root'));\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}
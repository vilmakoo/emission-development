{"version":3,"sources":["services/communicationWithServer.js","state/searchReducer.js","components/SearchBar.js","state/chartReducer.js","components/Charts.js","components/Result.js","components/Notification.js","components/Info.js","state/databaseReducer.js","components/App.js","state/store.js","index.js"],"names":["communicationWithServer","searchCountrysEmissions","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","country","perCapita","compare","response","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","t0","stop","this","_x","_x2","_x3","apply","arguments","updateDatabase","_ref2","_callee2","_context2","searchTopEmitters","_ref3","_callee3","_context3","initialState","searchTerm","searchPopulations","topEmitters","undefined","setError","error","type","searchReducer","state","length","action","objectSpread","highIncomeAverages","SearchBar","_this","react_default","createElement","FormLabel_default","className","Input_default","onChange","event","props","changeSearchTerm","target","value","placeholder","FormControlLabel_default","control","Checkbox_default","checked","togglePopulationCheckBox","label","toggleCompareCheckBox","Button_default","variant","color","size","onClick","preventDefault","Component","mapDispatchToProps","dispatch","searchService","name","setTimeout","ConnectedSearchBar","connect","search","showEmissionDevelopment","showPopulationDevelopment","showPerCapitaDevelopment","chartReducer","Charts","emissionChart","populationChart","perCapitaChart","options","title","yaxis","theme","palette","text","align","margin","style","fontSize","xaxis","labels","rotateAlways","max","tooltip","fixed","enabled","position","offsetY","offsetX","x","formatter","seriesName","legend","horizontalAlign","showForNullSeries","countMax","averages","add","maxOfAverages","reduce","b","Math","maxOfData","emissionsOptions","min","map","emissionsAverage","d","emissions","axisTicks","show","axisBorder","populationsOptions","population","populationAverage","perCapitaOptions","perCapitaAverage","seriesEmissions","filter","year","y","seriesPopulations","seriesPerCapita","handleButtonClick","chart","showChart","id","react_apexcharts_min_default","series","width","ConnectedCharts","charts","Result","result","components_Charts","List_default","c","i","ListItem_default","key","ConnectedResult","Notification","alertText","databaseError","searchError","updatingDatabase","Dialog_default","open","DialogContent_default","classes","root","DialogContentText_default","React","ConnectedNotification","database","Info","Card_default","CardContent_default","Typography_default","component","gutterBottom","paragraph","setUpdatingState","updatingState","databaseReducer","App","handleUpdateDatabaseButtonClick","components_Info","components_Notification","components_SearchBar","components_Result","serverService","ConnectedApp","reducer","combineReducers","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"yXA6BeA,EAAA,CAAEC,wBA3BY,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,EAASC,EAAWC,GAA3B,IAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELC,IAAMC,IAAN,kBAAAC,OAA4BV,EAA5B,eAAAU,OAAiDT,EAAjD,aAAAS,OAAsER,IAFjE,cAEtBC,EAFsBE,EAAAM,KAAAN,EAAAO,OAAA,SAGrBT,EAASU,MAHY,cAAAR,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAAAA,EAAAO,OAAA,SAKrB,SALqB,yBAAAP,EAAAU,SAAAhB,EAAAiB,KAAA,YAAH,gBAAAC,EAAAC,EAAAC,GAAA,OAAA1B,EAAA2B,MAAAJ,KAAAK,YAAA,GA2BaC,eAlBtB,eAAAC,EAAA7B,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA0B,IAAA,IAAArB,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEIC,IAAMC,IAAI,wBAFd,cAEbN,EAFasB,EAAAd,KAAAc,EAAAb,OAAA,SAGZT,EAASU,MAHG,cAAAY,EAAAnB,KAAA,EAAAmB,EAAAX,GAAAW,EAAA,SAAAA,EAAAb,OAAA,SAKZ,SALY,yBAAAa,EAAAV,SAAAS,EAAAR,KAAA,YAAH,yBAAAO,EAAAH,MAAAJ,KAAAK,YAAA,GAkBsCK,kBATnC,eAAAC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA8B,IAAA,IAAAzB,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAECC,IAAMC,IAAI,+BAFX,cAEhBN,EAFgB0B,EAAAlB,KAAAkB,EAAAjB,OAAA,SAGfT,EAASU,MAHM,cAAAgB,EAAAvB,KAAA,EAAAuB,EAAAf,GAAAe,EAAA,SAAAA,EAAAjB,OAAA,SAKf,SALe,yBAAAiB,EAAAd,SAAAa,EAAAZ,KAAA,YAAH,yBAAAW,EAAAP,MAAAJ,KAAAK,YAAA,IClBjBS,EAAe,CAAEC,WAAY,GAAIC,mBAAmB,EAAO9B,SAAS,EAAO+B,iBAAaC,GAsEjFC,EAAW,SAACC,GACvB,MAAO,CACLC,KAAM,YACND,UAmDWE,EA1HO,WAAkC,IAAjCC,EAAiClB,UAAAmB,OAAA,QAAAN,IAAAb,UAAA,GAAAA,UAAA,GAAzBS,EAAcW,EAAWpB,UAAAmB,OAAA,EAAAnB,UAAA,QAAAa,EACtD,OAAQO,EAAOJ,MACf,IAAK,qBACH,OAAO3C,OAAAgD,EAAA,EAAAhD,CAAA,GACF6C,EADL,CAEER,WAAYU,EAAOV,aAGvB,IAAK,8BACH,OAAOrC,OAAAgD,EAAA,EAAAhD,CAAA,GACF6C,EADL,CAEEP,mBAAoBO,EAAMP,oBAG9B,IAAK,2BACH,OAAOtC,OAAAgD,EAAA,EAAAhD,CAAA,GACF6C,EADL,CAEErC,SAAUqC,EAAMrC,UAGpB,IAAK,aACH,MAAO,CACL6B,WAAYQ,EAAMR,WAClBC,kBAAmBO,EAAMP,kBACzB9B,QAASqC,EAAMrC,QACfF,QAASyC,EAAOzC,QAChBa,KAAM4B,EAAO5B,KACb8B,mBAAoBF,EAAOE,oBAG/B,IAAK,YACH,OAAOjD,OAAAgD,EAAA,EAAAhD,CAAA,GACF6C,EADL,CAEEH,MAAOK,EAAOL,QAGlB,IAAK,mBACH,MAAO,CACLL,WAAYQ,EAAMR,WAClBC,kBAAmBO,EAAMP,kBACzB9B,QAASqC,EAAMrC,QACf+B,YAAaQ,EAAO5B,MAGxB,QACE,OAAO0B,ICxCLK,mLACK,IAAAC,EAAA7B,KAsBP,OACE8B,EAAAjD,EAAAkD,cAAA,WACED,EAAAjD,EAAAkD,cAAA,YACED,EAAAjD,EAAAkD,cAACC,EAAAnD,EAAD,CAAWoD,UAAW,gBAAtB,UAEAH,EAAAjD,EAAAkD,cAAA,iGAEAD,EAAAjD,EAAAkD,cAACG,EAAArD,EAAD,CAAOoD,UAAW,eAAgBZ,KAAK,QAAQc,SA5BtB,SAACC,GAC9BP,EAAKQ,MAAMC,iBAAiBF,EAAMG,OAAOC,QA2B4CC,YAAY,SAASD,MAAOxC,KAAKqC,MAAMtB,aAExHe,EAAAjD,EAAAkD,cAAA,WACED,EAAAjD,EAAAkD,cAACW,EAAA7D,EAAD,CACEoD,UAAW,kBACXU,QACEb,EAAAjD,EAAAkD,cAACa,EAAA/D,EAAD,CAAUgE,QAAS7C,KAAKqC,MAAMrB,kBAAmBmB,SA9BvB,SAACC,GACrCP,EAAKQ,MAAMS,8BA+BHC,MAAM,wBAGRjB,EAAAjD,EAAAkD,cAACW,EAAA7D,EAAD,CACEoD,UAAW,kBACXU,QACEb,EAAAjD,EAAAkD,cAACa,EAAA/D,EAAD,CAAUgE,QAAS7C,KAAKqC,MAAMnD,QAASiD,SAlCxB,SAACC,GAC1BP,EAAKQ,MAAMW,2BAmCHD,MAAM,2DAIVjB,EAAAjD,EAAAkD,cAACkB,EAAApE,EAAD,CAAQoD,UAAW,SAAUZ,KAAK,SAAS6B,QAAQ,WAAWC,MAAM,UAAUC,KAAK,QAAQC,QApClF,SAACjB,GACdA,EAAMkB,iBACNzB,EAAKQ,MAAM7D,wBAAwBqD,EAAKQ,MAAMtB,WAAYc,EAAKQ,MAAMrB,kBAAmBa,EAAKQ,MAAMnD,WAkC/F,UAEA4C,EAAAjD,EAAAkD,cAACkB,EAAApE,EAAD,CAAQoD,UAAW,SAAUiB,QAAQ,WAAWC,MAAM,YAAYE,QAjC9C,SAACjB,GACzBP,EAAKQ,MAAM3B,qBAgCuF0C,KAAK,SAAnG,2EApDcG,aAoElBC,EAAqB,CACzBlB,iBDzB8B,SAACvB,GAC/B,MAAO,CACLM,KAAM,qBACNN,WAAYA,ICuBdvC,wBDAqC,SAACQ,EAASgC,EAAmB9B,GAClE,sBAAAT,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAO0E,GAAP,IAAA5D,EAAA,OAAAjB,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcmE,EAAclF,wBAAwBQ,EAASgC,EAAmB9B,GADhF,OAGQ,WAFPW,EADDR,EAAAM,MAIH8D,EAAStC,EAAS,mCACa,cAAtBtB,EAAKb,QAAQ2E,KACtBF,EAAStC,EAAS,sBAElBsC,EAAS,CACPpC,KAAM,aACNrC,QAASa,EAAKb,QAAQ2E,KACtB9D,KAAMA,EAAKb,QAAQa,KACnB8B,mBAAoB9B,EAAK8B,qBAI7BiC,WAAW,WACTH,EACEtC,EAAS,QAEV,KApBE,wBAAA9B,EAAAU,SAAAhB,EAAAiB,SAAP,gBAAAC,GAAA,OAAAxB,EAAA2B,MAAAJ,KAAAK,YAAA,ICAAyC,yBDpBsC,WACtC,MAAO,CACLzB,KAAM,gCCmBR2B,sBDfmC,WACnC,MAAO,CACL3B,KAAM,6BCcRX,kBDsB+B,WAC/B,sBAAAH,EAAA7B,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA0B,EAAOiD,GAAP,IAAA5D,EAAA,OAAAjB,EAAAC,EAAAO,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACcmE,EAAchD,oBAD5B,OACCb,EADDY,EAAAd,KAIH8D,EADW,UAAT5D,EACOsB,EAAS,kCAET,CACPE,KAAM,mBACNxB,SAIJ+D,WAAW,WACTH,EACEtC,EAAS,QAEV,KAhBE,wBAAAV,EAAAV,SAAAS,EAAAR,SAAP,gBAAAE,GAAA,OAAAK,EAAAH,MAAAJ,KAAAK,YAAA,KCfawD,EALYC,YAhBH,SAACvC,GACvB,MAAO,CACLR,WAAYQ,EAAMwC,OAAOhD,WACzBC,kBAAmBO,EAAMwC,OAAO/C,kBAChC9B,QAASqC,EAAMwC,OAAO7E,UAcxBsE,EAFyBM,CAGzBlC,wDCxFId,EAAe,CAAEkD,yBAAyB,EAAOC,2BAA2B,EAAOC,0BAA0B,GA2CpGC,EAzCM,WAAkC,IAAjC5C,EAAiClB,UAAAmB,OAAA,QAAAN,IAAAb,UAAA,GAAAA,UAAA,GAAzBS,EAC5B,QADqDT,UAAAmB,OAAA,EAAAnB,UAAA,QAAAa,GACtCG,MACf,IAAK,4BACH,OAAO3C,OAAAgD,EAAA,EAAAhD,CAAA,GACF6C,EADL,CAEEyC,yBAAyB,IAG7B,IAAK,8BACH,OAAOtF,OAAAgD,EAAA,EAAAhD,CAAA,GACF6C,EADL,CAEE0C,2BAA2B,IAG/B,IAAK,8BACH,OAAOvF,OAAAgD,EAAA,EAAAhD,CAAA,GACF6C,EADL,CAEE2C,0BAA0B,IAG9B,QACE,OAAO3C,ICjBL6C,mLACK,IAqNHC,EAWAC,EAWAC,EA3OG1C,EAAA7B,KACDwE,EAAU,SAACC,EAAOC,GACtB,MAAO,CACLC,MAAO,CACLC,QAAS,YAEXH,MAAO,CACLI,KAAMJ,EACNK,MAAO,SACPC,OAAQ,GACRC,MAAO,CACLC,SAAW,OACX9B,MAAQ,YAGZuB,MAAOA,EACPQ,MAAO,CACLC,OAAQ,CACNC,cAAc,GAEhBC,IAAK,MAEPC,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,SAAU,UACVC,QAAS,GACTC,QAAS,IAEXC,EAAG,CAAEC,UAAW,SAACC,GAAD,MAAgB,SAAWA,KAE7CC,OAAQ,CACNN,SAAU,MACVO,gBAAiB,QACjBL,QAAS,GACTM,mBAAmB,KAKnBC,EAAW,SAACC,EAAUtG,EAAMuG,GAChC,IAAMC,EAAgBF,EAASG,OAAO,SAACzH,EAAG0H,GAAJ,OAAUC,KAAKnB,IAAIxG,EAAG0H,IAAI,GAC1DE,EAAY5G,EAAKyG,OAAO,SAACzH,EAAG0H,GAAJ,OAAUC,KAAKnB,IAAIxG,EAAG0H,IAAI,GACxD,OAAOC,KAAKnB,IAAIgB,EAAeI,GAAaL,GAGxCM,EAAmBlC,EAAQ,kCAAgC,CAAC,CAChEmC,IAAK,EACLtB,IAAKrF,KAAKqC,MAAMxC,KAAOqG,EACrBlG,KAAKqC,MAAMV,mBAAqB3B,KAAKqC,MAAMV,mBAAmBwE,SAASS,IAAI,SAAA/H,GAAC,OAAIA,EAAEgI,mBAAoB,GACtG7G,KAAKqC,MAAMxC,KAAK+G,IAAI,SAAAE,GAAC,OAAIA,EAAEC,YAC3B,KACE,IACJjB,WAAY,mBACZkB,UAAW,CACTC,MAAM,GAERC,WAAY,CACVD,MAAM,EACN9D,MAAO,WAETgC,OAAQ,CACNH,MAAO,CACL7B,MAAO,YAGXsB,MAAO,CACLI,KAAM,wBACNG,MAAO,CACL7B,MAAO,YAGXmC,QAAS,CACPE,SAAS,MAKP2B,EAAqB3C,EAAQ,6BAA8B,CAAC,CAChEmC,IAAK,EACLtB,IAAMrF,KAAKqC,MAAMxC,MAAQG,KAAKqC,MAAMxC,KAAK+G,IAAI,SAAAE,GAAC,OAAIA,EAAEM,aAAelB,EACjElG,KAAKqC,MAAMV,mBAAqB3B,KAAKqC,MAAMV,mBAAmBwE,SAASS,IAAI,SAAA/H,GAAC,OAAIA,EAAEwI,oBAAqB,GACvGrH,KAAKqC,MAAMxC,KAAK+G,IAAI,SAAAE,GAAC,OAAIA,EAAEM,aAC3B,KACE,IACJtB,WAAY,aACZkB,UAAW,CACTC,MAAM,GAERC,WAAY,CACVD,MAAM,EACN9D,MAAO,WAETgC,OAAQ,CACNH,MAAO,CACL7B,MAAO,YAGXsB,MAAO,CACLI,KAAM,aACNG,MAAO,CACL7B,MAAO,YAGXmC,QAAS,CACPE,SAAS,MAKP8B,EAAmB9C,EAAQ,6CAA2C,CAC1E,CACEsB,WAAY,8BACZa,IAAK,EACLtB,IAAMrF,KAAKqC,MAAMxC,MAAQG,KAAKqC,MAAMxC,KAAK+G,IAAI,SAAAE,GAAC,OAAIA,EAAE7H,YAAciH,EAChElG,KAAKqC,MAAMV,mBAAqB3B,KAAKqC,MAAMV,mBAAmBwE,SAASS,IAAI,SAAA/H,GAAC,OAAyB,IAArBA,EAAE0I,mBAA8B,GAChHvH,KAAKqC,MAAMxC,KAAK+G,IAAI,SAAAE,GAAC,OAAkB,IAAdA,EAAE7H,YAC3B,KACE,IACJ+H,UAAW,CACTC,MAAM,GAERC,WAAY,CACVD,MAAM,EACN9D,MAAO,WAETgC,OAAQ,CACNH,MAAO,CACL7B,MAAO,YAGXsB,MAAO,CACLI,KAAM,mCACNG,MAAO,CACL7B,MAAO,YAGXmC,QAAS,CACPE,SAAS,MAKTgC,EAAkB,CAAC,CACvB7D,KAAM3D,KAAKqC,MAAMrD,QAAX,GAAAU,OAAwBM,KAAKqC,MAAMrD,SAAY,mBACrDqC,KAAM,OACNxB,KAAOG,KAAKqC,MAAMxC,MAAQG,KAAKqC,MAAMxC,KAAK+G,IAAI,SAAAE,GAAC,OAAIA,EAAEC,YAAc/G,KAAKqC,MAAMxC,KAAK4H,OAAO,SAAAX,GAAC,OAAoB,OAAhBA,EAAEC,YAAoBH,IAAI,SAACE,GACxH,MAAO,CACLlB,EAAGkB,EAAEY,KACLC,EAAGb,EAAEC,aAEJ,IAEP,CACEpD,KAAM,wCACNtC,KAAM,OACNxB,KAAMG,KAAKqC,MAAMV,mBAAqB3B,KAAKqC,MAAMV,mBAAmBwE,SAASsB,OAAO,SAAA5I,GAAC,OAAIA,EAAE6I,MAA+B,IAAvB7I,EAAEgI,mBAAwBD,IAAI,SAAA/H,GAC/H,MAAO,CACL+G,EAAG/G,EAAE6I,KACLC,EAAG9I,EAAEgI,oBAEJ,KAGDe,EAAoB,CAAC,CACzBjE,KAAM3D,KAAKqC,MAAMrD,QAAX,GAAAU,OAAwBM,KAAKqC,MAAMrD,SAAY,mBACrDqC,KAAM,OACNxB,KAAOG,KAAKqC,MAAMxC,MAAQG,KAAKqC,MAAMxC,KAAK+G,IAAI,SAAAE,GAAC,OAAIA,EAAEM,aACjDpH,KAAKqC,MAAMxC,KAAK4H,OAAO,SAAAX,GAAC,OAAqB,OAAjBA,EAAEM,aAAqBR,IAAI,SAACE,GACxD,MAAO,CACLlB,EAAGkB,EAAEY,KACLC,EAAGb,EAAEM,cAEJ,IAET,CACEzD,KAAM,wCACNtC,KAAM,OACNxB,KAAMG,KAAKqC,MAAMV,mBAAqB3B,KAAKqC,MAAMV,mBAAmBwE,SAASsB,OAAO,SAAA5I,GAAC,OAAIA,EAAE6I,MAAgC,IAAxB7I,EAAEwI,oBAAyBT,IAAI,SAAA/H,GAChI,MAAO,CACL+G,EAAG/G,EAAE6I,KACLC,EAAG9I,EAAEwI,qBAEJ,KAGDQ,EAAkB,CAAC,CACvBlE,KAAM3D,KAAKqC,MAAMrD,QAAX,GAAAU,OAAwBM,KAAKqC,MAAMrD,SAAY,mBACrDqC,KAAM,OACNxB,KAAOG,KAAKqC,MAAMxC,MAAQG,KAAKqC,MAAMxC,KAAK+G,IAAI,SAAAE,GAAC,OAAIA,EAAE7H,YACjDe,KAAKqC,MAAMxC,KAAK4H,OAAO,SAAAX,GAAC,OAAoB,OAAhBA,EAAE7H,YAAoB2H,IAAI,SAACE,GACvD,MAAO,CACLlB,EAAGkB,EAAEY,KACLC,EAAiB,IAAdb,EAAE7H,aAGP,IAEN,CACE0E,KAAM,wCACNtC,KAAM,OACNxB,KAAMG,KAAKqC,MAAMV,mBAAqB3B,KAAKqC,MAAMV,mBAAmBwE,SAASsB,OAAO,SAAA5I,GAAC,OAAIA,EAAE6I,MAAQ7I,EAAE0I,kBAA2C,IAAvB1I,EAAE0I,mBAAwBX,IAAI,SAAA/H,GACrJ,MAAO,CACL+G,EAAG/G,EAAE6I,KACLC,EAAwB,IAArB9I,EAAE0I,oBAEJ,KAGDO,EAAoB,SAACC,GAAD,OAAW,WACnClG,EAAKQ,MAAM2F,UAAUD,KAoCvB,OA/BE1D,EADErE,KAAKqC,MAAM2B,wBAEXlC,EAAAjD,EAAAkD,cAAA,OAAKkG,GAAG,kBAAkBhG,UAAU,SAClCH,EAAAjD,EAAAkD,cAACmG,EAAArJ,EAAD,CAAO2F,QAASkC,EAAkByB,OAAQX,EAAiBnG,KAAK,OAAO+G,MAAM,SAIhEtG,EAAAjD,EAAAkD,cAACkB,EAAApE,EAAD,CAAQoD,UAAU,SAASiB,QAAQ,WAAWC,MAAM,UAAUE,QAASyE,EAAkB,cAAzF,6BAKjBxD,EADEtE,KAAKqC,MAAM4B,0BAEXnC,EAAAjD,EAAAkD,cAAA,OAAKkG,GAAG,qBACNnG,EAAAjD,EAAAkD,cAACmG,EAAArJ,EAAD,CAAO2F,QAAS2C,EAAoBgB,OAAQP,EAAmBvG,KAAK,OAAO+G,MAAM,SAIlEtG,EAAAjD,EAAAkD,cAACkB,EAAApE,EAAD,CAAQoD,UAAU,SAASiB,QAAQ,WAAWC,MAAM,UAAUE,QAASyE,EAAkB,gBAAzF,+BAKnBvD,EADEvE,KAAKqC,MAAM6B,yBAEXpC,EAAAjD,EAAAkD,cAAA,OAAKkG,GAAG,wBACNnG,EAAAjD,EAAAkD,cAACmG,EAAArJ,EAAD,CAAO2F,QAAS8C,EAAkBa,OAAQN,EAAiBxG,KAAK,OAAO+G,MAAM,SAI/DtG,EAAAjD,EAAAkD,cAACkB,EAAApE,EAAD,CAAQoD,UAAU,SAASiB,QAAQ,WAAWC,MAAM,UAAUE,QAASyE,EAAkB,cAAzF,yCAIlBhG,EAAAjD,EAAAkD,cAAA,WACED,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,OACbH,EAAAjD,EAAAkD,cAAA,OAAKkG,GAAG,WAAUnG,EAAAjD,EAAAkD,cAAA,qBAAa/B,KAAKqC,MAAMrD,UAEzCqF,EACAC,EACAC,WA9PUhB,aAgRfC,EAAqB,CACzBwE,UD5PuB,SAACD,GACxB,MAAc,cAAVA,EACK,CACL1G,KAAM,6BAEW,gBAAV0G,EACF,CACL1G,KAAM,+BAGD,CACLA,KAAM,iCCsPGgH,EAFSvE,YAfA,SAACvC,GACvB,MAAO,CACLvC,QAASuC,EAAMwC,OAAO/E,QACtBa,KAAM0B,EAAMwC,OAAOlE,KACnB8B,mBAAoBJ,EAAMwC,OAAOpC,mBACjCqC,wBAAyBzC,EAAM+G,OAAOtE,wBACtCC,0BAA2B1C,EAAM+G,OAAOrE,0BACxCC,yBAA0B3C,EAAM+G,OAAOpE,2BAQMV,EAAzBM,CAA6CM,GCnR/DmE,mLAEF,IAAIC,EAWJ,OATEA,EADExI,KAAKqC,MAAMxC,KACHiC,EAAAjD,EAAAkD,cAAC0G,EAAD,MACDzI,KAAKqC,MAAMpB,YACVa,EAAAjD,EAAAkD,cAAC2G,EAAA7J,EAAD,KACPmB,KAAKqC,MAAMpB,YAAY2F,IAAI,SAAC+B,EAAGC,GAAJ,OAAW9G,EAAAjD,EAAAkD,cAAC8G,EAAAhK,EAAD,CAAUiK,IAAKH,GAAIC,EAAE,EAArB,KAA0BD,MAGzD7G,EAAAjD,EAAAkD,cAAA,wCAIVD,EAAAjD,EAAAkD,cAAA,WACED,EAAAjD,EAAAkD,cAAA,WACED,EAAAjD,EAAAkD,cAAA,qBAECyG,WAlBUjF,aAkCNwF,EAFSjF,YAPA,SAACvC,GACvB,MAAO,CACL1B,KAAM0B,EAAMwC,OAAOlE,KACnBoB,YAAaM,EAAMwC,OAAO9C,cAIN6C,CAAyByE,0DChC3CS,oLAEF,IAAIC,EAaAhH,EAOJ,OAlBEgH,EADEjJ,KAAKqC,MAAM6G,cACDlJ,KAAKqC,MAAM6G,cACdlJ,KAAKqC,MAAM8G,YACRnJ,KAAKqC,MAAM8G,YACkB,gBAAhCnJ,KAAKqC,MAAM+G,iBACR,uBAC6B,SAAhCpJ,KAAKqC,MAAM+G,iBACR,mCAEAlI,EAKZe,EADEjC,KAAKqC,MAAM6G,eAAiBlJ,KAAKqC,MAAM8G,YAC7B,qBAEA,oBAIZrH,EAAAjD,EAAAkD,cAAA,WACED,EAAAjD,EAAAkD,cAACsH,EAAAxK,EAAD,CACEyK,UAAoBpI,IAAd+H,GAENnH,EAAAjD,EAAAkD,cAACwH,EAAA1K,EAAD,CAAe2K,QAAS,CAAEC,KAAMxH,IAC9BH,EAAAjD,EAAAkD,cAAC2H,GAAA7K,EAAD,CAAmB2K,QAAS,CAAEC,KAAM,sBACjCR,aA7BYU,IAAMpG,WAgDlBqG,GAFe9F,YARN,SAACvC,GACvB,MAAO,CACL6H,iBAAkB7H,EAAMsI,SAAST,iBACjCF,cAAe3H,EAAMsI,SAASzI,MAC9B+H,YAAa5H,EAAMwC,OAAO3C,QAIA0C,CAAyBkF,kEClBxCc,oLA1BX,OACEhI,EAAAjD,EAAAkD,cAAA,WACED,EAAAjD,EAAAkD,cAACgI,GAAAlL,EAAD,CAAMoD,UAAW,QACfH,EAAAjD,EAAAkD,cAACiI,GAAAnL,EAAD,KACEiD,EAAAjD,EAAAkD,cAACkI,GAAApL,EAAD,CAAYqE,QAAQ,KAAKgH,UAAU,KAAK/G,MAAM,UAAUgH,cAAc,GAAtE,YAIArI,EAAAjD,EAAAkD,cAACkI,GAAApL,EAAD,CAAYuL,WAAS,EAACjH,MAAM,cAAclB,UAAU,aAApD,ioBAIAH,EAAAjD,EAAAkD,cAACkI,GAAApL,EAAD,CAAYuL,WAAS,EAACjH,MAAM,cAAclB,UAAU,aAApD,2EAIAH,EAAAjD,EAAAkD,cAACkI,GAAApL,EAAD,CAAYuL,WAAS,EAACjH,MAAM,cAAclB,UAAU,aAApD,wNAnBOsB,aCJbzC,GAAe,CAAEsI,iBAAkB,KAAMhI,MAAO,MAsBzCiJ,GAAmB,SAAC9I,GAC/B,MAAO,CACLF,KAAM,qBACNiJ,cAAe/I,IAINJ,GAAW,SAACC,GACvB,MAAO,CACLC,KAAM,YACND,UAmBWmJ,GAjDS,WAAkC,IAAjChJ,EAAiClB,UAAAmB,OAAA,QAAAN,IAAAb,UAAA,GAAAA,UAAA,GAAzBS,GAAcW,EAAWpB,UAAAmB,OAAA,EAAAnB,UAAA,QAAAa,EACxD,OAAQO,EAAOJ,MAEf,IAAK,YACH,OAAO3C,OAAAgD,EAAA,EAAAhD,CAAA,GACF6C,EADL,CAEEH,MAAOK,EAAOL,QAGlB,IAAK,qBACH,OAAO1C,OAAAgD,EAAA,EAAAhD,CAAA,GACF6C,EADL,CAEE6H,iBAAkB3H,EAAO6I,gBAG7B,QACE,OAAO/I,ICXLiJ,oLACK,IAAA3I,EAAA7B,KACDyK,EAA+B,eAAAhM,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOqD,GAAP,OAAAxD,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtCsC,EAAKQ,MAAM/B,iBAD2B,wBAAAjB,EAAAU,SAAAhB,EAAAiB,SAAH,gBAAAC,GAAA,OAAAxB,EAAA2B,MAAAJ,KAAAK,YAAA,GAIrC,OACEyB,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,aACbH,EAAAjD,EAAAkD,cAAA,MAAIE,UAAU,SAAd,oBACAH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAC2I,GAAD,MACA5I,EAAAjD,EAAAkD,cAAA,WACED,EAAAjD,EAAAkD,cAAC4I,GAAD,MACA7I,EAAAjD,EAAAkD,cAAC6I,EAAD,MACA9I,EAAAjD,EAAAkD,cAACkB,EAAApE,EAAD,CAAQoD,UAAW,SAAUiB,QAAQ,WAAWE,KAAK,QAAQC,QAASoH,GAAtE,mBACA3I,EAAAjD,EAAAkD,cAAC8I,EAAD,gBAfMtH,aA6BZC,GAAqB,CACzBlD,eDD4B,WAC5B,sBAAA7B,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAO0E,GAAP,IAAA+E,EAAA,OAAA5J,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLkE,EAAS4G,GAAiB,gBADrBhL,EAAAE,KAAA,EAGgBuL,EAAcxK,iBAH9B,OAGCkI,EAHDnJ,EAAAM,KAK2B8D,EAArB,qBAAX+E,EAAyC6B,GAAiB,QAAoBlJ,GAAS,mCAEvFyC,WAAW,WACTH,EAAS4G,GAAiB,OAC1B5G,EAAStC,GAAS,QACjB,KAVE,wBAAA9B,EAAAU,SAAAhB,EAAAiB,SAAP,gBAAAC,GAAA,OAAAxB,EAAA2B,MAAAJ,KAAAK,YAAA,KCKa0K,GAFMjH,YAVG,SAACvC,GACvB,MAAO,CACL6H,iBAAkB7H,EAAMsI,SAAST,mBAQS5F,GAAzBM,CAA6C0G,uBCpC5DQ,GAAUC,aAAgB,CAC9BlH,OAAQzC,EACRuI,SAAUU,GACVjC,OAAQnE,IAQK+G,GALDC,aACZH,GACAI,aAAgBC,OCNZC,kBAAS,WACbC,IAASD,OACPxJ,EAAAjD,EAAAkD,cAACyJ,EAAA,EAAD,CAAUN,MAAOA,IACfpJ,EAAAjD,EAAAkD,cAAC0J,GAAD,OAEFC,SAASC,eAAe,WAG5BL,KACAJ,GAAMU,UAAUN","file":"static/js/main.eb4132ba.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst searchCountrysEmissions = async (country, perCapita, compare) => {\n  try {\n    const response = await axios.get(`/api/emissions/${country}?percapita=${perCapita}&compare=${compare}`);\n    return response.data;\n  } catch (error) {\n    return 'error';\n  }\n};\n\nconst updateDatabase = async () => {\n  try {\n    const response = await axios.get('/api/update_database');\n    return response.data;\n  } catch (error) {\n    return 'error';\n  }\n};\n\nconst searchTopEmitters = async () => {\n  try {\n    const response = await axios.get('/api/emissions/top_emitters');\n    return response.data;\n  } catch (error) {\n    return 'error';\n  }\n};\n\nexport default { searchCountrysEmissions, updateDatabase, searchTopEmitters };","import searchService from '../services/communicationWithServer';\n\nconst initialState = { searchTerm: '', searchPopulations: false, compare: false, topEmitters: undefined };\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'CHANGE_SEARCH_TERM':\n    return {\n      ...state,\n      searchTerm: action.searchTerm\n    };\n\n  case 'TOGGLE_POPULATION_CHECK_BOX':\n    return {\n      ...state,\n      searchPopulations: !state.searchPopulations\n    };\n\n  case 'TOGGLE_COMPARE_CHECK_BOX':\n    return {\n      ...state,\n      compare: !state.compare\n    };\n\n  case 'SET_RESULT':\n    return {\n      searchTerm: state.searchTerm,\n      searchPopulations: state.searchPopulations,\n      compare: state.compare,\n      country: action.country,\n      data: action.data,\n      highIncomeAverages: action.highIncomeAverages\n    };\n\n  case 'SET_ERROR':\n    return {\n      ...state,\n      error: action.error\n    };\n\n  case 'SET_TOP_EMITTERS':\n    return {\n      searchTerm: state.searchTerm,\n      searchPopulations: state.searchPopulations,\n      compare: state.compare,\n      topEmitters: action.data\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const changeSearchTerm = (searchTerm) => {\n  return {\n    type: 'CHANGE_SEARCH_TERM',\n    searchTerm: searchTerm\n  };\n};\n\nexport const togglePopulationCheckBox = () => {\n  return {\n    type: 'TOGGLE_POPULATION_CHECK_BOX'\n  };\n};\n\nexport const toggleCompareCheckBox = () => {\n  return {\n    type: 'TOGGLE_COMPARE_CHECK_BOX'\n  };\n};\n\nexport const setError = (error) => {\n  return {\n    type: 'SET_ERROR',\n    error\n  };\n};\n\nexport const searchCountrysEmissions = (country, searchPopulations, compare) => {\n  return async (dispatch) => {\n    const data = await searchService.searchCountrysEmissions(country, searchPopulations, compare);\n\n    if (data === 'error') {\n      dispatch(setError('Couldn\\'t connect to the server'));\n    } else if (data.country.name === 'NOT FOUND') {\n      dispatch(setError('Country not found'));\n    } else {\n      dispatch({\n        type: 'SET_RESULT',\n        country: data.country.name,\n        data: data.country.data,\n        highIncomeAverages: data.highIncomeAverages\n      });\n    }\n\n    setTimeout(() => {\n      dispatch(\n        setError(null)\n      );\n    }, 4000);\n  };\n};\n\nexport const searchTopEmitters = () => {\n  return async (dispatch) => {\n    const data = await searchService.searchTopEmitters();\n\n    if (data === 'error') {\n      dispatch(setError('Couldn\\'t connect to the server'));\n    } else {\n      dispatch({\n        type: 'SET_TOP_EMITTERS',\n        data\n      });\n    }\n\n    setTimeout(() => {\n      dispatch(\n        setError(null)\n      );\n    }, 4000);\n  };\n};\n\n\nexport default searchReducer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport { changeSearchTerm, searchCountrysEmissions, togglePopulationCheckBox, toggleCompareCheckBox, searchTopEmitters } from '../state/searchReducer';\n\nclass SearchBar extends Component {\n  render() {\n    const handleSearchTermChange = (event) => {\n      this.props.changeSearchTerm(event.target.value);\n    };\n\n    const handleIncludePopulationsClick = (event) => {\n      this.props.togglePopulationCheckBox();\n    };\n\n    const handleCompareClick = (event) => {\n      this.props.toggleCompareCheckBox();\n    };\n\n    const search = (event) => {\n      event.preventDefault();\n      this.props.searchCountrysEmissions(this.props.searchTerm, this.props.searchPopulations, this.props.compare);\n    };\n\n    const searchTopEmitters = (event) => {\n      this.props.searchTopEmitters();\n    };\n\n    return (\n      <div>\n        <form>\n          <FormLabel className={'search-title'}>Search</FormLabel>\n\n          <p>Search for a country to see how its CO² emissions have developed during the years</p>\n\n          <Input className={'search-input'} type='input' onChange={handleSearchTermChange} placeholder='Search' value={this.props.searchTerm} />\n\n          <div>\n            <FormControlLabel\n              className={'search-checkbox'}\n              control={\n                <Checkbox checked={this.props.searchPopulations} onChange={handleIncludePopulationsClick} />\n              }\n              label='Include populations'\n            />\n\n            <FormControlLabel\n              className={'search-checkbox'}\n              control={\n                <Checkbox checked={this.props.compare} onChange={handleCompareClick} />\n              }\n              label='Compare to the averages of countries with high income'\n            />\n          </div>\n\n          <Button className={'button'} type='submit' variant='outlined' color='primary' size='large' onClick={search}>Search</Button>\n\n          <Button className={'button'} variant='outlined' color='secondary' onClick={searchTopEmitters} size='large'>Search for countries with\n          largest emissions per capita in 2014</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchTerm: state.search.searchTerm,\n    searchPopulations: state.search.searchPopulations,\n    compare: state.search.compare\n  };\n};\n\nconst mapDispatchToProps = {\n  changeSearchTerm,\n  searchCountrysEmissions,\n  togglePopulationCheckBox,\n  toggleCompareCheckBox,\n  searchTopEmitters\n};\n\nconst ConnectedSearchBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n\nexport default ConnectedSearchBar;","const initialState = { showEmissionDevelopment: false, showPopulationDevelopment: false, showPerCapitaDevelopment: false };\n\nconst chartReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'SHOW_EMISSION_DEVELOPMENT':\n    return {\n      ...state,\n      showEmissionDevelopment: true\n    };\n\n  case 'SHOW_POPULATION_DEVELOPMENT':\n    return {\n      ...state,\n      showPopulationDevelopment: true\n    };\n\n  case 'SHOW_PER_CAPITA_DEVELOPMENT':\n    return {\n      ...state,\n      showPerCapitaDevelopment: true\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const showChart = (chart) => {\n  if (chart === 'emissions') {\n    return {\n      type: 'SHOW_EMISSION_DEVELOPMENT'\n    };\n  } else if (chart === 'populations') {\n    return {\n      type: 'SHOW_POPULATION_DEVELOPMENT'\n    };\n  } else {\n    return {\n      type: 'SHOW_PER_CAPITA_DEVELOPMENT'\n    };\n  }\n};\n\nexport default chartReducer;","import React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { showChart } from '../state/chartReducer';\n\nclass Charts extends Component {\n  render() {\n    const options = (title, yaxis) => {\n      return {\n        theme: {\n          palette: 'palette6'\n        },\n        title: {\n          text: title,\n          align: 'center',\n          margin: 20,\n          style: {\n            fontSize:  '20px',\n            color:  '#EA3546'\n          },\n        },\n        yaxis: yaxis,\n        xaxis: {\n          labels: {\n            rotateAlways: true\n          },\n          max: 2014\n        },\n        tooltip: {\n          fixed: {\n            enabled: true,\n            position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          },\n          x: { formatter: (seriesName) => 'Year: ' + seriesName }\n        },\n        legend: {\n          position: 'top',\n          horizontalAlign: 'right',\n          offsetX: 40,\n          showForNullSeries: false,\n        }\n      };\n    };\n\n    const countMax = (averages, data, add) => {\n      const maxOfAverages = averages.reduce((a, b) => Math.max(a, b), 0);\n      const maxOfData = data.reduce((a, b) => Math.max(a, b), 0);\n      return Math.max(maxOfAverages, maxOfData) + add;\n    };\n\n    const emissionsOptions = options('Development of CO²-emissions', [{\n      min: 0,\n      max: this.props.data ? countMax(\n        this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.map(a => a.emissionsAverage) : [],\n        this.props.data.map(d => d.emissions),\n        5000\n      ) : 1000,\n      seriesName: 'CO²-emissions',\n      axisTicks: {\n        show: true,\n      },\n      axisBorder: {\n        show: true,\n        color: '#662E9B',\n      },\n      labels: {\n        style: {\n          color: '#662E9B',\n        }\n      },\n      title: {\n        text: 'CO²-emissions (kt)',\n        style: {\n          color: '#662E9B',\n        }\n      },\n      tooltip: {\n        enabled: true\n      }\n    }]\n    );\n\n    const populationsOptions = options('Development of Populations', [{\n      min: 0,\n      max: (this.props.data && this.props.data.map(d => d.population)) ? countMax(\n        this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.map(a => a.populationAverage) : [],\n        this.props.data.map(d => d.population),\n        1000000\n      ) : 1000,\n      seriesName: 'Population',\n      axisTicks: {\n        show: true,\n      },\n      axisBorder: {\n        show: true,\n        color: '#662E9B'\n      },\n      labels: {\n        style: {\n          color: '#662E9B',\n        }\n      },\n      title: {\n        text: 'Population',\n        style: {\n          color: '#662E9B',\n        }\n      },\n      tooltip: {\n        enabled: true\n      }\n    }]\n    );\n\n    const perCapitaOptions = options('Development of CO²-emissions per Capita', [\n      {\n        seriesName: 'CO²-emissions Per Capita',\n        min: 0,\n        max: (this.props.data && this.props.data.map(d => d.perCapita)) ? countMax(\n          this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.map(a => a.perCapitaAverage * 1000000) : [],\n          this.props.data.map(d => d.perCapita * 1000000),\n          1000\n        ) : 1000,\n        axisTicks: {\n          show: true,\n        },\n        axisBorder: {\n          show: true,\n          color: '#662E9B',\n        },\n        labels: {\n          style: {\n            color: '#662E9B',\n          }\n        },\n        title: {\n          text: 'CO²-emissions Per Capita (kg)',\n          style: {\n            color: '#662E9B',\n          }\n        },\n        tooltip: {\n          enabled: true\n        }\n      }]\n    );\n\n    const seriesEmissions = [{\n      name: this.props.country ? `${this.props.country}` : 'Searched country',\n      type: 'line',\n      data: (this.props.data && this.props.data.map(d => d.emissions)) ? this.props.data.filter(d => d.emissions !== null).map((d) => {\n        return {\n          x: d.year,\n          y: d.emissions\n        };\n      }) : []\n    },\n    {\n      name: 'Average of countries with high income',\n      type: 'line',\n      data: this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.filter(a => a.year && a.emissionsAverage !== 0).map(a => {\n        return {\n          x: a.year,\n          y: a.emissionsAverage\n        };\n      }) : []\n    }];\n\n    const seriesPopulations = [{\n      name: this.props.country ? `${this.props.country}` : 'Searched country',\n      type: 'line',\n      data: (this.props.data && this.props.data.map(d => d.population))\n        ? this.props.data.filter(d => d.population !== null).map((d) => {\n          return {\n            x: d.year,\n            y: d.population\n          };\n        }) : []\n    },\n    {\n      name: 'Average of countries with high income',\n      type: 'line',\n      data: this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.filter(a => a.year && a.populationAverage !== 0).map(a => {\n        return {\n          x: a.year,\n          y: a.populationAverage\n        };\n      }) : []\n    }];\n\n    const seriesPerCapita = [{\n      name: this.props.country ? `${this.props.country}` : 'Searched country',\n      type: 'line',\n      data: (this.props.data && this.props.data.map(d => d.perCapita))\n        ? this.props.data.filter(d => d.perCapita !== null).map((d) => {\n          return {\n            x: d.year,\n            y: d.perCapita * 1000000\n          };\n        })\n        : []\n    },\n    {\n      name: 'Average of countries with high income',\n      type: 'line',\n      data: this.props.highIncomeAverages ? this.props.highIncomeAverages.averages.filter(a => a.year && a.perCapitaAverage && a.perCapitaAverage !== 0).map(a => {\n        return {\n          x: a.year,\n          y: a.perCapitaAverage * 1000000\n        };\n      }) : []\n    }];\n\n    const handleButtonClick = (chart) => () => {\n      this.props.showChart(chart);\n    };\n\n    let emissionChart;\n    if (this.props.showEmissionDevelopment) {\n      emissionChart = (\n        <div id=\"emissions-chart\" className='chart'>\n          <Chart options={emissionsOptions} series={seriesEmissions} type=\"line\" width=\"700\" />\n        </div>\n      );\n    } else {\n      emissionChart = (<Button className='button' variant='outlined' color='primary' onClick={handleButtonClick('emissions')}>Show emission development</Button>);\n    }\n\n    let populationChart;\n    if (this.props.showPopulationDevelopment) {\n      populationChart = (\n        <div id=\"populations-chart\">\n          <Chart options={populationsOptions} series={seriesPopulations} type=\"line\" width=\"700\" />\n        </div>\n      );\n    } else {\n      populationChart = (<Button className='button' variant='outlined' color='primary' onClick={handleButtonClick('populations')}>Show population development</Button>);\n    }\n\n    let perCapitaChart;\n    if (this.props.showPerCapitaDevelopment) {\n      perCapitaChart = (\n        <div id=\"emissions-per-capita\">\n          <Chart options={perCapitaOptions} series={seriesPerCapita} type=\"line\" width=\"700\" />\n        </div>\n      );\n    } else {\n      perCapitaChart = (<Button className='button' variant='outlined' color='primary' onClick={handleButtonClick('perCapita')}>Show emissions development per capita</Button>);\n    }\n\n    return (\n      <div>\n        <div className=\"App\">\n          <div id=\"country\"><b>Country: {this.props.country}</b></div>\n\n          {emissionChart}\n          {populationChart}\n          {perCapitaChart}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    country: state.search.country,\n    data: state.search.data,\n    highIncomeAverages: state.search.highIncomeAverages,\n    showEmissionDevelopment: state.charts.showEmissionDevelopment,\n    showPopulationDevelopment: state.charts.showPopulationDevelopment,\n    showPerCapitaDevelopment: state.charts.showPerCapitaDevelopment\n  };\n};\n\nconst mapDispatchToProps = {\n  showChart\n};\n\nconst ConnectedCharts = connect(mapStateToProps, mapDispatchToProps)(Charts);\n\nexport default ConnectedCharts;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport Charts from './Charts';\n\nclass Result extends Component {\n  render() {\n    let result;\n    if (this.props.data) {\n      result = (<Charts />);\n    } else if (this.props.topEmitters) {\n      result = (<List>\n        {this.props.topEmitters.map((c, i) => (<ListItem key={c}>{i+1}. {c}</ListItem>))}\n      </List>);\n    } else {\n      result = (<p>Results will be shown here.</p>);\n    }\n\n    return (\n      <div>\n        <div>\n          <h2>Results</h2>\n\n          {result}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    data: state.search.data,\n    topEmitters: state.search.topEmitters\n  };\n};\n\nconst ConnectedResult = connect(mapStateToProps)(Result);\n\nexport default ConnectedResult;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\n\nclass Notification extends React.Component {\n  render() {\n    let alertText;\n    if (this.props.databaseError) {\n      alertText = this.props.databaseError;\n    } else if (this.props.searchError) {\n      alertText = this.props.searchError;\n    } else if (this.props.updatingDatabase === 'in progress') {\n      alertText = 'Updating database...';\n    } else if (this.props.updatingDatabase === 'done') {\n      alertText = 'Database is now up to date!';\n    } else {\n      alertText = undefined;\n    }\n\n    let className;\n    if (this.props.databaseError || this.props.searchError) {\n      className = 'notification-error';\n    } else {\n      className = 'notification-info';\n    }\n\n    return (\n      <div>\n        <Dialog\n          open={alertText !== undefined}\n        >\n          <DialogContent classes={{ root: className }}>\n            <DialogContentText classes={{ root: 'notification-text' }}>\n              {alertText}\n            </DialogContentText>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    updatingDatabase: state.database.updatingDatabase,\n    databaseError: state.database.error,\n    searchError: state.search.error\n  };\n};\n\nconst ConnectedNotification = connect(mapStateToProps)(Notification);\n\nexport default ConnectedNotification;","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Info extends Component {\n  render() {\n\n    return (\n      <div>\n        <Card className={'info'}>\n          <CardContent>\n            <Typography variant='h2' component='h3' color='primary' gutterBottom={true}>\n              Welcome!\n            </Typography>\n\n            <Typography paragraph color='textPrimary' className='info-text'>\n              With this app you can search for a country and see how its CO²-emissions have developed during the years. This is done by typing the country's name to the search field on the right. To see how much the country has emitted per capita, check the \"Include populations\" check box. You can also compare these pieces of information to the average emissions of countries with high income. The results will be visualized in three charts: the first will show the emissions, the second the populations and the last one contains the emissions per capita. You can zoom in to see only certain years by clicking on the chart and selecting an area.\n            </Typography>\n\n            <Typography paragraph color='textPrimary' className='info-text'>\n              You can also see a list of countries with largest emissions per capita.\n            </Typography>\n\n            <Typography paragraph color='textPrimary' className='info-text'>\n              The database can be updated by clicking the \"Update database\" button. The system will then get the newest information from World Bank's API and update the database. This takes some time, so be patient.\n            </Typography>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Info;","import serverService from '../services/communicationWithServer';\n\nconst initialState = { updatingDatabase: null, error: null };\n\nconst databaseReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n  case 'SET_ERROR':\n    return {\n      ...state,\n      error: action.error\n    };\n\n  case 'SET_UPDATING_STATE':\n    return {\n      ...state,\n      updatingDatabase: action.updatingState\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport const setUpdatingState = (state) => {\n  return {\n    type: 'SET_UPDATING_STATE',\n    updatingState: state\n  };\n};\n\nexport const setError = (error) => {\n  return {\n    type: 'SET_ERROR',\n    error\n  };\n};\n\nexport const updateDatabase = () => {\n  return async (dispatch) => {\n    dispatch(setUpdatingState('in progress'));\n\n    const result = await serverService.updateDatabase();\n\n    result === 'database updated' ? dispatch(setUpdatingState('done')) : dispatch(setError('Couldn\\'t connect to the server'));\n\n    setTimeout(() => {\n      dispatch(setUpdatingState(null));\n      dispatch(setError(null));\n    }, 4000);\n  };\n};\n\nexport default databaseReducer;","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport SearchBar from './SearchBar';\nimport Result from './Result';\nimport Notification from './Notification';\nimport Info from './Info';\nimport { updateDatabase } from '../state/databaseReducer';\n\nclass App extends Component {\n  render() {\n    const handleUpdateDatabaseButtonClick = async (event) => {\n      this.props.updateDatabase();\n    };\n\n    return (\n      <div className='container'>\n        <h1 className='title'>CO²-emissions</h1>\n        <div className='application'>\n          <Info />\n          <div>\n            <Notification />\n            <SearchBar />\n            <Button className={'button'} variant='outlined' size='large' onClick={handleUpdateDatabaseButtonClick}>Update database</Button>\n            <Result />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    updatingDatabase: state.database.updatingDatabase\n  };\n};\n\nconst mapDispatchToProps = {\n  updateDatabase,\n};\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default ConnectedApp;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport searchReducer from './searchReducer';\nimport databaseReducer from './databaseReducer';\nimport chartReducer from './chartReducer';\n\nconst reducer = combineReducers({\n  search: searchReducer,\n  database: databaseReducer,\n  charts: chartReducer\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './state/store';\nimport './styles/index.scss';\nimport 'typeface-roboto';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root'));\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}
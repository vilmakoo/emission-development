{"version":3,"sources":["services/search.js","state/searchReducer.js","components/SearchBar.js","components/Result.js","components/App.js","state/store.js","index.js"],"names":["services_search","countrysEmissions","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","country","response","wrap","_context","prev","next","axios","get","concat","sent","console","log","abrupt","data","emissions","stop","this","_x","apply","arguments","initialState","searchTerm","searchReducer","state","length","undefined","action","type","objectSpread","SearchBar","_this","react_default","createElement","Form","onSubmit","event","preventDefault","props","searchCountrysEmissions","Label","Control","value","onChange","changeSearchTerm","target","placeholder","Button","Component","mapDispatchToProps","dispatch","searchService","ConnectedSearchBar","connect","Result","className","bundle_default","width","height","color","points","x","y","App","components_SearchBar","components_Result","reducer","combineReducers","search","store","createStore","applyMiddleware","thunk","render","ReactDOM","es","components_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.99b198a8.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst countrysEmissions = async (country) => {\n  const response = await axios.get(`/api/emissions/${country}`);\n  console.log('response', response);\n  return response.data.data.emissions; // muuta tää json fiksummaksi bäkkärin puolella\n};\n\nexport default { countrysEmissions };","import searchService from '../services/search';\n\nconst initialState = { searchTerm: '' };\n\nconst searchReducer = (state = initialState, action) => {\n  console.log('state', state);\n  switch (action.type) {\n  case 'CHANGE_SEARCH_TERM':\n    return {\n      searchTerm: action.searchTerm\n    };\n\n  case 'SEARCH':\n    return {\n      ...state,\n      emissions: action.data };\n\n  default:\n    return state;\n  }\n};\n\nexport const changeSearchTerm = (searchTerm) => {\n  return {\n    type: 'CHANGE_SEARCH_TERM',\n    searchTerm: searchTerm\n  };\n};\n\nexport const searchCountrysEmissions = (country) => {\n  return async (dispatch) => {\n    const emissions = await searchService.countrysEmissions(country);\n\n    dispatch({\n      type: 'SEARCH',\n      data: emissions,\n    });\n  };\n};\n\n\nexport default searchReducer;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { changeSearchTerm, searchCountrysEmissions } from '../state/searchReducer';\n\nclass SearchBar extends Component {\n  render() {\n    const handleSearchTermChange = (event) => {\n      this.props.changeSearchTerm(event.target.value);\n    };\n\n    const search = (event) => {\n      event.preventDefault();\n      this.props.searchCountrysEmissions(this.props.searchTerm);\n      // axios\n      //   .get(`/api/emissions/${this.props.searchTerm}`)\n      //   .then(response => {\n      //     console.log(response);\n      //   });\n    };\n\n    return (\n      <Form onSubmit={search}>\n        <Form.Label>Search</Form.Label>\n        <Form.Control type='input' value={this.props.searchTerm} onChange={handleSearchTermChange} placeholder='Search' />\n        <Button type='submit'>Search</Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchTerm: state.searchTerm,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeSearchTerm,\n  searchCountrysEmissions\n};\n\nconst ConnectedSearchBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n\nexport default ConnectedSearchBar;","import React, { Component } from 'react';\nimport LineChart from 'react-linechart';\nimport '../../node_modules/react-linechart/dist/styles.css';\n\nclass Result extends Component {\n  render() {\n    const data = [\n      {\n        color: 'steelblue',\n        points: [{ x: 1, y: 2 }, { x: 3, y: 5 }, { x: 7, y: -3 }]\n      }\n    ];\n\n    return (\n      <div>\n        <div className=\"App\">\n          <h2>Result</h2>\n          <LineChart\n            width={600}\n            height={400}\n            data={data}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Result;","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport Result from './Result';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='container'>\n        <h1>CO²-emissions</h1>\n        <SearchBar />\n        <Result />\n      </div>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport searchReducer from './searchReducer';\n\nconst reducer = combineReducers({\n  search: searchReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './state/store';\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root'));\n};\n\nrender();\nstore.subscribe(render);"],"sourceRoot":""}